---

- name: Create own kubeconfig directory
  file:
    state: directory
    path: "{{ openshift_install_dir }}/config/"
    mode: 0755

- name: Copy kubeconfig
  copy:
    remote_src: yes
    src: "{{ openshift_install_dir }}/auth/kubeconfig"
    dest: "{{ openshift_install_dir }}/config/kubeconfig"
    mode: 0644

- name: get contents of file
  command: cat "{{ openshift_install_dir }}/auth/kubeconfig"
  register: file

- name: Fetch Kubeconfig
  set_fact:
#   kubeconfig: "{{ lookup('file',  ’kubeconfig’ )  | from_yaml }}"

    kubeconfig: "{{ file.stdout | from_yaml }}"

- name: debug
  debug:
    msg: "file.stdout: {{ file.stdout }}"

- name: debug
  debug:
    msg: "kubeconfig: {{ kubeconfig }}"

- name:  Pause 
  pause:
    prompt: "pls press Return"
    delay: 60
    
- name: Select cluster & user
  set_fact:
    cluster: "{{ kubeconfig | json_query('clusters[?name==`'~ cluster_name ~'`].cluster') | first }}"
    user: "{{ kubeconfig | json_query('users[?name==`admin`].user') | first }}"

- name: Set kube variables
  set_fact:
    k8s_kubeconfig: "{{ openshift_install_dir }}/config/kubeconfig"
    k8s_host: "{{ cluster.server }}"
    k8s_ca_cert: "{{ openshift_install_dir }}/config/ca.crt"
    k8s_client_key: "{{ openshift_install_dir }}/config/client.key"
    k8s_client_cert: "{{ openshift_install_dir }}/config/client.crt"

- name: Create k8s_ca_cert
  copy:
    content: "{{ cluster['certificate-authority-data'] | b64decode }}"
    dest: "{{ k8s_ca_cert }}"
    mode: 0644

- name: Create k8s_client_key
  copy:
    content: "{{ user['client-key-data'] | b64decode }}"
    dest: "{{ k8s_client_key }}"
    mode: 0644

- name: Create k8s_client_cert
  copy:
    content: "{{ user['client-certificate-data'] | b64decode }}"
    dest: "{{ k8s_client_cert }}"
    mode: 0644
